name: Deploy Application to Azure

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  deploy-infra:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout 3TierIaC Repository
        uses: actions/checkout@v3
        with:
          repository : rahulhbc/3TierIaC
          path: multi_tier_arch
      
      - name: Debug - List Files
        run: ls -R
        working-directory: ${{ github.workspace }}

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_wrapper: false

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Terraform Init (3TierIaC)
        env:
          ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
          ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        run: terraform init
        working-directory: ${{ github.workspace }}/3TierIaC/multi_tier_arch
        

      - name: Terraform Apply (3TierIaC)
        env:
          ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
          ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        run: terraform apply -auto-approve
        working-directory: ${{ github.workspace }}/3TierIaC/multi_tier_arch

  deploy-app:
    runs-on: ubuntu-latest
    needs: deploy-infra  # Ensure infra is deployed before app deployment

    steps:
      - name: Checkout app-deploy Repository
        uses: actions/checkout@v3
        with:
          path: app-deploy/nodejs-hello-world

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_wrapper: false

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Terraform Init (app-deploy)
        env:
          ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
          ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        run: terraform init
        working-directory: app-deploy/nodejs-hello-world

      - name: Terraform Plan (app-deploy)
        env:
          ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
          ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        run: |
          terraform plan -out=tfplan
          if [ -f tfplan ]; then
            echo "Plan file created successfully."
          else
            echo "Plan file not found. Exiting."
            exit 1
          fi
        working-directory: app-deploy/nodejs-hello-world

      - name: Terraform Apply (app-deploy)
        env:
          ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
          ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        run: |
          if [ -f tfplan ]; then
            terraform apply -auto-approve tfplan
          else
            echo "No plan file found to apply."
            exit 1
          fi
        working-directory: app-deploy/nodejs-hello-world

      - name: Verify Deployment
        run: curl http://${{ secrets.PUBLIC_IP }}

