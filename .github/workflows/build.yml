name: Deploy Application to Azure

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Create SSH Key Files
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
        echo "${{ secrets.SSH_PUBLIC_KEY }}" > ~/.ssh/id_rsa.pub
        chmod 600 ~/.ssh/id_rsa
        chmod 644 ~/.ssh/id_rsa.pub

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_wrapper: false

    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Terraform Init
      env:
          ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
          ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      run: terraform init
      working-directory: nodejs-hello-world

    #Added configuration for Terraform State Remove
#    - name: Terraform State Remove
#      run: |
#        terraform state rm module.network
#      terraform state rm module.network.azurerm_resource_group.rg
#      terraform state rm module.network.azurerm_public_ip.frontend_pip
#      terraform state rm module.network.azurerm_network_security_group.frontend_nsg
#      terraform state rm module.network.azurerm_virtual_network.vnet
#      working-directory: nodejs-hello-world
  
    - name: Terraform Plan
      env:
          ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
          ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}  
      run: |
          terraform plan -out=tfplan
          if [ -f tfplan ]; then
            echo "Plan file created successfully."
          else
            echo "Plan file not found. Exiting."
            exit 1
          fi
      working-directory: nodejs-hello-world

    - name: Terraform State Cleanup (Optional)
      env:
        ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
        ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
        ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
        ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      run: |
        terraform state rm module.network.azurerm_virtual_network.vnet || echo "Resource not found in state"
        terraform state rm module.network.azurerm_network_security_group.frontend_nsg || echo "Resource not found in state"
        terraform state rm module.network.azurerm_public_ip.frontend_pip || echo "Resource not found in state"
        terraform state rm module.network.aazurerm_subnet.frontend || echo "Resource not found in state"
      
#    - name: Terraform Import Resources
#      env:
#          ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
#          ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
#          ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
#          ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
#      run: | 
#        terraform import module.network.azurerm_virtual_network.vnet "/subscriptions/7c63e1b6-0a9a-487e-b657-e58721d3e957/resourceGroups/iac-secure-rg/providers/Microsoft.Network/virtualNetworks/iac-vnet"
#        terraform import module.network.azurerm_network_security_group.frontend_nsg "/subscriptions/7c63e1b6-0a9a-487e-b657-e58721d3e957/resourceGroups/iac-secure-rg/providers/Microsoft.Network/networkSecurityGroups/frontend-nsg"
#        terraform import module.network.azurerm_public_ip.frontend_pip "/subscriptions/7c63e1b6-0a9a-487e-b657-e58721d3e957/resourceGroups/iac-secure-rg/providers/Microsoft.Network/publicIPAddresses/frontend-pip"
#        terraform import module.network.azurerm_subnet.frontend "/subscriptions/7c63e1b6-0a9a-487e-b657-e58721d3e957/resourceGroups/iac-secure-rg/providers/Microsoft.Network/virtualNetworks/iac-vnet/subnets/frontend-subnet"
#      working-directory: nodejs-hello-world

    - name: Terraform Apply
      env:
          ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
          ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      run: |
        |
          if [ -f tfplan ]; then
            terraform apply -auto-approve tfplan
          else
            echo "No plan file found to apply."
            exit 1
          fi
      working-directory: nodejs-hello-world

    - name: Verify Deployment
      run: curl http://${{ secrets.PUBLIC_IP }}
